{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "rebuildVNET01": {
      "type": "string",
      "defaultValue": "No"
    },
    "rebuildVNET02": {
      "type": "string",
      "defaultValue": "No"
    },
    "rebuildVNET03": {
      "type": "string",
      "defaultValue": "No"
    },
    "workshopName": {
      "type": "string",
      "defaultValue": "WorkshopNetworkingDeepDive"
    },
    "scriptversion": {
      "type": "string",
      "defaultValue": "1.1"
    },

    "diagnosticsStorageAccountName": {
      "type": "string",
      "defaultValue": "sec01logs"
    },
    "diagnosticsStorageAccountId": {
      "type": "string",
      "defaultValue": "/subscriptions/5057421f-2e33-4a47-8b21-41ba410c7d06/resourceGroups/sec01rg/providers/Microsoft.Storage/storageAccounts/sec01logs"
    },
    "networkSecurityGroupRulesWIN": {
      "type": "array",
      "defaultValue": [
        {
          "name": "RDP",
          "properties": {
            "priority": 300,
            "protocol": "TCP",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "3389"
          }
        },
        {
          "name": "WWW",
          "properties": {
            "priority": 400,
            "protocol": "TCP",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "80"
          }
        }
      ]
    },
    "networkSecurityGroupRulesLINUX": {
      "type": "array",
      "defaultValue": [
        {
          "name": "SSH",
          "properties": {
            "priority": 300,
            "protocol": "TCP",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "22"
          }
        },
        {
          "name": "WWW",
          "properties": {
            "priority": 400,
            "protocol": "TCP",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "80"
          }
        }
      ]
    },
    "networkSecurityGroupRulesLINUXMGMT": {
      "type": "array",
      "defaultValue": [
        {
          "name": "SSH",
          "properties": {
            "priority": 300,
            "protocol": "TCP",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "22"
          }
        },
        {
          "name": "RDP",
          "properties": {
            "priority": 400,
            "protocol": "TCP",
            "access": "Allow",
            "direction": "Inbound",
            "sourceAddressPrefix": "*",
            "sourcePortRange": "*",
            "destinationAddressPrefix": "*",
            "destinationPortRange": "3389"
          }
        }
      ]
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "workshopadmin",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "1qaz!QAZ!QAZ",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "workshop01",
      "metadata": {
        "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "dnsLabelPrefix1": {
      "type": "string",
      "defaultValue": "workshop02",
      "metadata": {
        "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "dnsLabelPrefix2": {
      "type": "string",
      "defaultValue": "workshop03",
      "metadata": {
        "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "dnsLabelPrefix3": {
      "type": "string",
      "defaultValue": "workshop03",
      "metadata": {
        "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "16.04-LTS",
      "metadata": {
        "description": "The Ubuntu version for the VM"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vnet01Name": {
      "type": "string",
      "defaultValue": "vnet01",
      "metadata": {
        "description": "VNet name"
      }
    },
    "vnet02Name": {
      "type": "string",
      "defaultValue": "vnet02",
      "metadata": {
        "description": "vnetJUMPHOSTName name"
      }
    },
    "vnet03Name": {
      "type": "string",
      "defaultValue": "vnet03",
      "metadata": {
        "description": "Vnet03"
      }
    },
    "vnet01AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address prefix"
      }
    },
    "subnet1vnet01Prefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet 1 Prefix"
      }
    },
    "subnet1vnet01Name": {
      "type": "string",
      "defaultValue": "wfe-subnet",
      "metadata": {
        "description": "Subnet 1 Name"
      }
    },
    "subnet2vnet01Prefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Subnet 2 Prefix"
      }
    },
    "subnet2vnet01Name": {
      "type": "string",
      "defaultValue": "backend-subnet",
      "metadata": {
        "description": "Subnet 2 Name"
      }

    },
    "subnet3vnet01Prefix": {
      "type": "string",
      "defaultValue": "10.0.2.0/24",
      "metadata": {
        "description": "Subnet 3 Prefix"
      }
    },
    "subnet3vnet01Name": {
      "type": "string",
      "defaultValue": "gwsubnet01",
      "metadata": {
        "description": "Subnet 3 Name"
      }

    },
    "vnet02AddressPrefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/16",
      "metadata": {
        "description": "Address prefix"
      }
    },
    "subnet1vnet02Prefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/24",
      "metadata": {
        "description": "Subnet 1 Prefix"
      }
    },
    "subnet1vnet02Name": {
      "type": "string",
      "defaultValue": "jmp-subnet",
      "metadata": {
        "description": "Subnet 1 Name"
      }
    },
    "vnet03AddressPrefix": {
      "type": "string",
      "defaultValue": "172.16.0.0/16",
      "metadata": {
        "description": "Address prefix"
      }
    },
    "subnet1vnet03Prefix": {
      "type": "string",
      "defaultValue": "172.16.0.0/24",
      "metadata": {
        "description": "Subnet 1 Prefix"
      }
    },
    "subnet1vnet03Name": {
      "type": "string",
      "defaultValue": "sub01",
      "metadata": {
        "description": "Subnet 1 Name"
      }
    }
  },
  "variables": {
    "metricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachines/', variables('vmName'))]",
    "metricsclosing": "[concat('<Metrics resourceId=\"', variables('metricsresourceid'), '\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]",
    "metricscounters": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\AvailableMemory\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentAvailableMemory\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Mem. percent available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\UsedMemory\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory used\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedMemory\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory percentage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedByCache\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Mem. used by cache\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PagesPerSec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Pages\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PagesReadPerSec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Page reads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PagesWrittenPerSec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Page writes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\AvailableSwap\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Swap available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentAvailableSwap\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Swap percent available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\UsedSwap\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Swap used\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\PercentUsedSwap\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Swap percent used\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentIdleTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU idle time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentUserTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentNiceTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU nice time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentPrivilegedTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentInterruptTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU interrupt time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentDPCTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU DPC time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentProcessorTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU percentage guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor\\PercentIOWaitTime\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU IO wait time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\BytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk total bytes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\ReadBytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\WriteBytesPerSecond\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\TransfersPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk transfers\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\ReadsPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk reads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\WritesPerSecond\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk writes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageReadTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageWriteTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageTransferTime\" sampleRate=\"PT15S\" unit=\"Seconds\"><annotation displayName=\"Disk transfer time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk\\AverageDiskQueueLength\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Disk queue length\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\NetworkInterface\\BytesTransmitted\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Network out guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\NetworkInterface\\BytesReceived\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Network in guest OS\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\NetworkInterface\\PacketsTransmitted\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Packets sent\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\NetworkInterface\\PacketsReceived\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Packets received\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\NetworkInterface\\BytesTotal\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Network total bytes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\NetworkInterface\\TotalRxErrors\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Packets received errors\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\NetworkInterface\\TotalTxErrors\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Packets sent errors\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\NetworkInterface\\TotalCollisions\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Network collisions\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "metricsstart": "<WadCfg><DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\"><DiagnosticInfrastructureLogs scheduledTransferPeriod=\"PT1M\" scheduledTransferLogLevelFilter=\"Warning\"/>",
    "wadcfgx": "[concat(variables('metricsstart'), variables('metricscounters'), variables('metricsclosing'))]",
    "metricsresourceid1": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachines/', variables('vmName1'))]",
    "metricsclosing1": "[concat('<Metrics resourceId=\"', variables('metricsresourceid1'), '\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>')]",
    "wadcfgx1": "[concat(variables('metricsstart'), variables('metricscounters'), variables('metricsclosing1'))]",
    "diagnosticsExtensionName": "LinuxDiagnostic",
    "nsgWINId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupNameWIN'))]",
    "nsgLINUXId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupNameLINUX'))]",
    "nsgKALIId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupRulesLINUXMGMT'))]",
    "networkSecurityGroupNameWIN": "winNSG",
    "networkSecurityGroupNameLINUX": "linuxNSG",
    "networkSecurityGroupRulesLINUXMGMT": "kaliNSG",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "publicIPAddressType": "Dynamic",
    "applicationSecurityGroupNameWFE": "asgwfeappsec",
    "applicationSecurityGroupNameBCK": "asgbck",
    "vmName": "vmub1604dev01",
    "vmName1": "vmub1804dev01",
    "vmName2": "vmwin2k16dev01",
    "vmName3": "vmwin2k8r2dev01",
    "jumphostvmname": "kali01mng01",
    "vmSizeLinux": "Standard_A0",
    "vmSizeWindows": "Standard_DS1_v2"
  },
  "resources": [
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/applicationSecurityGroups",
      "name": "[variables('applicationSecurityGroupNameWFE')]",
      "location": "[parameters('location')]",
      "tags": {}
    },
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/applicationSecurityGroups",
      "name": "[variables('applicationSecurityGroupNameBCK')]",
      "location": "[parameters('location')]",
      "tags": {}
    },
    {
      "name": "[variables('networkSecurityGroupNameWIN')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": "[parameters('networkSecurityGroupRulesWIN')]"
      },
      "tags": {}
    },
    {
      "name": "[variables('networkSecurityGroupNameLINUX')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": "[parameters('networkSecurityGroupRulesLINUX')]"
      },
      "tags": {}
    },
    {
      "name": "[variables('networkSecurityGroupRulesLINUXMGMT')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": "[parameters('networkSecurityGroupRulesLINUXMGMT')]"
      },
      "tags": {}
    },
    {
      "condition": "[equals(parameters('rebuildVNET02'),'Yes')]",
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnet02Name')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnet02AddressPrefix')]"
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2017-06-01",
          "type": "subnets",
          "name": "[parameters('subnet1vnet02Name')]",
          "dependsOn": [
            "[parameters('vnet02Name')]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnet1vnet02Prefix')]"
          }
        },
        {
          "apiVersion": "2016-06-01",
          "type": "virtualNetworkPeerings",
          "name": "vnet02tovnet01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet01Name'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet02Name'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet1vnet01Name'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet2vnet01Name'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet3vnet01Name'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet02Name'), parameters('subnet1vnet02Name'))]"
          ],
          "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnet01Name'))]"
            }
          }
        }
      ]
    },
    {
      "condition": "[equals(parameters('rebuildvnet03'),'Yes')]",
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnet03Name')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnet03AddressPrefix')]"
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2017-06-01",
          "type": "subnets",
          "name": "[parameters('subnet1vnet03Name')]",
          "dependsOn": [
            "[parameters('vnet03Name')]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnet1vnet03Prefix')]"
          }
        }
      ]
    },
    {
      "condition": "[equals(parameters('rebuildVNET01'),'Yes')]",
      "apiVersion": "2018-06-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnet01Name')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnet01AddressPrefix')]"
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2017-06-01",
          "type": "subnets",
          "name": "[parameters('subnet1vnet01Name')]",
          "dependsOn": [
            "[parameters('vnet01Name')]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnet1vnet01Prefix')]"
          }
        },
        {
          "apiVersion": "2017-06-01",
          "type": "subnets",
          "name": "[parameters('subnet2vnet01Name')]",
          "dependsOn": [
            "[parameters('vnet01Name')]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet1vnet01Name'))]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnet2vnet01Prefix')]"
          }
        },
        {
          "apiVersion": "2017-06-01",
          "type": "subnets",
          "name": "[parameters('subnet3vnet01Name')]",
          "dependsOn": [
            "[parameters('vnet01Name')]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet1vnet01Name'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet2vnet01Name'))]"
          ],
          "properties": {
            "addressPrefix": "[parameters('subnet3vnet01Prefix')]"
          }
        },

        {
          "apiVersion": "2016-06-01",
          "type": "virtualNetworkPeerings",
          "name": "VNet01toVNet02",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet01Name'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet02Name'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet1vnet01Name'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet2vnet01Name'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet3vnet01Name'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet02Name'), parameters('subnet1vnet02Name'))]"
          ],
          "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": false,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnet02Name'))]"
            }
          }
        }
      ]
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('vmName'),'PIP')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('vmName2'),'PIP')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('vmName3'),'PIP')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('vmName1'),'PIP')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('jumphostvmname'),'PIP')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2017-09-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmName'),'NIC01')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('vmName'),'PIP'))]",
        "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnet01Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet1vnet01Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet2vnet01Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet3vnet01Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('vmName'),'PIP'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet1vnet01Name'))]"
              },
              "applicationSecurityGroups": [
                {
                  "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', variables('applicationSecurityGroupNameWFE'))]"
                }
              ]
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgLINUXId')]"
        }
      }
    },
    {
      "apiVersion": "2017-09-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmName2'),'NIC01')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('vmName2'),'PIP'))]",
        "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnet01Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet1vnet01Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet2vnet01Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet3vnet01Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('vmName2'),'PIP'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet2vnet01Name'))]"
              },
              "applicationSecurityGroups": [
                {
                  "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', variables('applicationSecurityGroupNameBCK'))]"
                }
              ]
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgWINId')]"
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('vmName'),'NIC01'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSizeLinux')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmName'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmName'),'NIC01'))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName1')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('vmName1'),'NIC01'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSizeLinux')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName1')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmName1'),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmName1'),'NIC01'))]"
            }
          ]
        }
      }
    },
    {
      "name": "[variables('vmName2')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2016-04-30-preview",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('vmName2'),'NIC01'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[variables('vmName2')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSizeWindows')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmName2'),'_OSDisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName2'),'NIC01'))]"
            }
          ]
        },
        "licenseType": "Windows_Server"
      },
      "tags": {
        "Workshop": "[parameters('workshopName')]",
        "OS": "Windows]",
        "Version": "[parameters('scriptversion')]"
      }
    },
    {
      "name": "[concat(variables('vmName3'),'NIC01')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-09-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('vmName3'),'PIP'))]",
        "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnet01Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet1vnet01Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet2vnet01Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet3vnet01Name'))]"
        
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet2vnet01Name'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', concat(variables('vmName3'),'PIP'))]"
              },
              "applicationSecurityGroups": [
                {
                  "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', variables('applicationSecurityGroupNameBCK'))]"
                }
              ]
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgWINId')]"
        }
      },
      "tags": {

      }
    },
    {
      "name": "[concat(variables('vmName1'),'NIC01')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-09-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('vmName1'),'PIP'))]",
        "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnet01Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet1vnet01Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet2vnet01Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet3vnet01Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet01Name'), parameters('subnet2vnet01Name'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses',concat(variables('vmName1'),'PIP'))]"
              },
              "applicationSecurityGroups": [
                {
                  "id": "[resourceId('Microsoft.Network/applicationSecurityGroups', variables('applicationSecurityGroupNameWFE'))]"
                }
              ]
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgLINUXId')]"
        }
      },
      "tags": {}
    },
    {
      "name": "[concat(variables('jumphostvmname'),'NIC01')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-09-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('jumphostvmname'),'PIP'))]",
        "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnet02Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet02Name'), parameters('subnet1vnet02Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet02Name'), parameters('subnet1vnet02Name'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('jumphostvmname'),'PIP'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgKALIId')]"
        }
      },
      "tags": {}
    },
    {
      "name": "[variables('vmName3')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('vmName3'),'NIC01'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSizeWindows')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(variables('vmName3'),'_OSDisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite"
          },
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2008-R2-SP1",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName3'),'NIC01'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('vmName3')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "enableAutomaticUpdates": true,
            "provisionVmAgent": true
          }
        },
        "licenseType": "Windows_Server"
      },
      "tags": {
        "Workshop": "[parameters('workshopName')]",
        "OS": "Windows",
        "Version": "[parameters('scriptversion')]"
      }
    }
  ]
}